// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    uid       String   @id
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    name String?

    stories     Story[]
    nodes       Node[]
    userStories UserStory[]
}

model Story {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    title       String
    description String @default("")

    author   User    @relation(fields: [authorId], references: [uid])
    authorId String
    image    String?
    price    Float   @default(0)

    nodes       Node[]
    userStories UserStory[]
}

model Node {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    title   String
    content String
    start   Boolean? @default(false)
    end     Boolean? @default(false)
    image   String?

    author   User   @relation(fields: [authorId], references: [uid])
    authorId String
    story    Story  @relation(fields: [storyId], references: [id])
    storyId  Int

    parentNodes Choice[] @relation("parentNodes")
    choiceNodes Choice[] @relation("choiceNodes")
}

model Choice {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    choiceText String

    parentNode   Node? @relation("parentNodes", fields: [parentNodeId], references: [id])
    parentNodeId Int?
    choiceNode   Node? @relation("choiceNodes", fields: [choiceNodeId], references: [id])
    choiceNodeId Int?
}

model UserStory {
    createdAt DateTime      @default(now())
    updatedAt DateTime      @updatedAt
    uid       String
    storyId   Int
    type      UserStoryType
    user      User          @relation(fields: [uid], references: [uid])
    story     Story         @relation(fields: [storyId], references: [id])

    @@id([uid, storyId])
}

enum UserStoryType {
    WISHLISTED
    IN_CART
    PURCHASED
    SAVE_FOR_LATER
}
